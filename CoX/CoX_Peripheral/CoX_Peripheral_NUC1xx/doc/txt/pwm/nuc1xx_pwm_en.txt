//*****************************************************************************
//
//! \defgroup NUC1xx_PWM NUC1xx PWM
//! 
//! \brief Nuvoton NUC1xx PWM Peripheral Driver.
//!
//! The CoX Peripheral Library also provides APIs for full functions of Nuvoton
//! NUC1xx PWM. This module supports the whole NUC1xx Series.
//!
//! <br />
//! <h1>Contents</h1>
//! - \ref NUC1xx_PWM_Blcok
//! - \ref NUC1xx_PWM_Function_Desc
//! - \ref NUC1xx_PWM_API_Group
//!   - \ref NUC1xx_PWM_API_Group_Config
//!   - \ref NUC1xx_PWM_API_Group_Function
//!     - \ref NUC1xx_PWM_API_Group_Output
//!     - \ref NUC1xx_PWM_API_Group_Capture
//!     - \ref NUC1xx_PWM_API_Group_Interrupt
//!   .
//! - \ref NUC1xx_PWM_Usage
//! .
//!
//! <br />
//! \section NUC1xx_PWM_Blcok 1. PWM Physical Block
//! <img src="NUC1xx_pwm_block.png" />
//! 
//! <br />
//! \section NUC1xx_PWM_Function_Desc 2. Functional Description
//! PWM includes the following functions:
//! - Interrupt
//! - Output
//! - Capture
//! .
//! 
//! <br />
//! \section NUC1xx_PWM_API_Group 3. API Groups
//! 
//! The PWM API is broken into two groups of functions : 
//! - those that deal with configuring the PWM
//! - those that deal with functions
//! .
//!
//! <br />
//! \subsection NUC1xx_PWM_API_Group_Config 3.1 PWM Configuration APIs 
//! 
//! The PWM are configured with :
//! - PWMInitConfigure()
//! - PWMFrequencySet()
//! - PWMFrequencyConfig()
//! - PWMDutySet()
//! .
//! 
//! <br />
//! \subsection NUC1xx_PWM_API_Group_Function 3.2 PWM Function APIs
//! 
//! <br />
//! \subsubsection NUC1xx_PWM_API_Group_Output 3.2.1 PWM Output APIs
//!
//! The PWM Output are set with : 
//! - PWMOutputEnable()
//! - PWMOutputDisable() 
//! .
//!
//! <br />
//! \subsubsection NUC1xx_PWM_API_Group_Capture 3.2.2 PWM Capture APIs
//!
//! The PWM Capture are set with : 
//! - PWMOutputEnable()
//! - PWMOutputDisable() 
//! .
//!
//! <br />
//! \subsubsection NUC1xx_PWM_API_Group_Interrupt 3.2.3 PWM Interrupt APIs
//!
//! The PWM Interrupt are set with : 
//! - PWMIntEnable()
//! - PWMIntDisable()
//! - PWMIntFlagClear() 
//! .
//!
//! <br />
//! \section NUC1xx_PWM_Usage 4. Usage & Program Examples
//! The following example shows how to use the PWM APIs to initialize 
//! the PWM and to achieve the PWM interrupt function.
//! 
//! \code
//!
//! unsigned long ulbase = PWMB_BASE;
//! unsigned long ulchannel = PWM_CHANNEL5;
//! unsigned long ulconfig = PWM_TOGGLE_MODE|PWM_OUTPUT_INVERTER_DIS |PWM_DEAD_ZONE_DIS;
//!                                         
//! //
//! // Set invert, dead zone and mode.
//! //
//! PWMInitConfigure(ulbase, ulchannel, ulconfig);
//!                   
//! //
//! // Set CNR, Prescale and Divider.
//! //
//! PWMFrequencyConfig(ulbase, ulchannel, 0x3FF1111);
//!
//! //
//! // Set CMR.
//! //
//! PWMDutySet(ulbase, ulchannel, 40);
//!
//! //
//! // Clear interrupt falg.
//! //
//! PWMIntFlagClear(ulbase, ulchannel, PWM_INT_PWM);
//!
//! //
//! // Set interrupt call back.
//! //
//! PWMIntCallbackInit(ulbase, user_Callback1);
//!
//! //
//! // PWM output interrupt enable.
//! //
//! PWMIntEnable(ulbase, ulchannel, PWM_INT_PWM);
//!
//! // 
//! // NVIC interrupt enable.
//! //
//! xIntEnable(INT_PWMA);
//!
//! //
//! // Set GPIO Pin as PWM.
//! //
//! xSPinTypePWM(PWM5, PE5);
//!
//! //
//! // Set output enable and capture disable.
//! //
//! PWMOutputEnable(ulbase, ulchannel);
//!
//! //
//! // Start PWM.
//! //
//! PWMStart(ulbase, ulchannel);
//!
//! \endcode
//! 
//! \note 
//! 
//
//*****************************************************************************

//*****************************************************************************
//
//! \defgroup NUC1xx_PWM_Exported_APIs PWM Exported APIs Refrence
//!
//! \brief Nuvoton NUC1xx PWM Driver Exported APIs.
//!
//
//*****************************************************************************

//*****************************************************************************
//
//! \defgroup NUC1xx_PWM_Int_Type PWM Interrupt Type
//! 
//! \brief Values that can be passed to \b PWMIntEnable(), \b PWMIntDisable().
//!
//! All the four macros:
//! -\ref PWM_INT_PWM
//! -\ref PWM_INT_CAP_FALL
//! -\ref PWM_INT_CAP_RISE
//! -\ref PWM_INT_CAP_BOTH
//
//*****************************************************************************

//*****************************************************************************
//
//! \defgroup NUC1xx_PWM_Event_Type PWM Event Type
//! 
//!
//! \brief Values that can be passed to \b PWMIntEnable(), \b PWMIntDisable(). 
//! 
//! All the two macros:
//! -\ref PWM_EVENT_PWM
//! -\ref PWM_EVENT_CAP
//
//*****************************************************************************

//*****************************************************************************
//
//! \defgroup NUC1xx_PWM_Channel PWM Channel
//! 
//!
//! \brief Values that can be passed to all the function. 
//! 
//! All the eight macros:
//! -\ref PWM_CHANNEL0
//! -\ref PWM_CHANNEL1
//! -\ref PWM_CHANNEL2
//! -\ref PWM_CHANNEL3
//! -\ref PWM_CHANNEL4
//! -\ref PWM_CHANNEL5
//! -\ref PWM_CHANNEL6
//! -\ref PWM_CHANNEL7
//
//*****************************************************************************

//*****************************************************************************
//
//! \defgroup NUC1xx_PWM_Clock_div PWM Clock Divider
//! 
//!
//! \brief Values that can be passed to all the function. 
//! 
//! All the eight macros:
//! -\ref PWM_CLOCK_DIV_1
//! -\ref PWM_CLOCK_DIV_2
//! -\ref PWM_CLOCK_DIV_4
//! -\ref PWM_CLOCK_DIV_8
//! -\ref PWM_CLOCK_DIV_16
//
//*****************************************************************************

//*****************************************************************************
//
//! \defgroup NUC1xx_PWM_Config PWM Clock Configure
//! 
//!
//! \brief Values that can be passed to \b PWMInitConfigure().. 
//! 
//! All the eight macros:
//! -\ref PWM_ONE_SHOT_MODE
//! -\ref PWM_TOGGLE_MODE
//! -\ref PWM_OUTPUT_INVERTER_EN
//! -\ref PWM_OUTPUT_INVERTER_DIS
//! -\ref PWM_DEAD_ZONE_EN
//! -\ref PWM_DEAD_ZONE_DIS 
//
//*****************************************************************************
