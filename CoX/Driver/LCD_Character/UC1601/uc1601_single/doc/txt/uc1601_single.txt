//*****************************************************************************
//
//!
//! \defgroup UC1601
//!
//! \brief This is the UC1601 series Driver.
//! 
//! UC1601s is an advanced high-voltage mixedsignal
//! CMOS IC, especially designed for the
//! display needs of ultra-low power hand-held
//! devices.This chip employs UltraChip¡¯s unique DCC
//! (Direct Capacitor Coupling) driver architecture to
//! achieve near crosstalk free images.
//!
//! <h1>Contents</h1>
//! - \ref UC1601_Blcok
//! - \ref UC1601_Pins
//! - \ref UC1601_SPI_MODE
//! - \ref UC1601_Function_Desc
//! .
//!
//! \section UC1601_Blcok 1. UC1601 Physical Block
//! <img src="UC1601.png" />
//!
//! \section UC1601_Pins 2. UC1601 Signal names
//! <img src="UC1601_Pins.png" />
//!
//! \section UC1601_SPI_MODE 3. UC1601 supported SPI mode
//! These devices can be driven by a microcontroller with its SPI peripheral 
//! running in either of the two following modes:
//! - CPOL=0, CPHA=0    \ref xSPI_MOTO_FORMAT_MODE_0
//! - CPOL=1, CPHA=1    \ref xSPI_MOTO_FORMAT_MODE_3
//! .
//! For these two modes, input data is latched in on the rising edge of Serial
//! Clock (C), and output data is available from the falling edge of Serial Clock (C).
//!
//! \section UC1601_Function_Desc 4. UC1601 Instructions
//! - Write Data Byte to Memory      \ref UC1601_WRITE_DATA
//! - Read Data Byte from Memory     \ref UC1601_READ_DATA
//! - Get Status                     \ref UC1601_GET_STATUS
//! - Set Column Address LSB         \ref UC1601_SET_CA_LSB
//! - Set Column Address MSB         \ref UC1601_SET_CA_MSB
//! - Set Temp. Compensation         \ref UC1601_SET_TC
//! - Set Power Control              \ref UC1601_SET_PC
//! - Set Scroll Line                \ref UC1601_SET_SL
//! - Set Page Address               \ref UC1601_SET_PA
//! - Set VBIAS Potentiometer        \ref UC1601_SET_PM
//! - Set Partial Display Control    \ref UC1601_SET_PD_EN
//! - Set RAM Address Control        \ref UC1601_SET_AC
//! - Set Frame Rate                 \ref UC1601_SET_LC3
//! - Frame Rate IS 80 frame-per-second \ref UC1601_SET_FR_80
//! - Set All Pixel ON               \ref UC1601_SET_DC1
//! - Set Inverse Display            \ref UC1601_SET_DC0
//! - Set Display Enable             \ref UC1601_SET_DC2
//! - Set LCD Mapping Control        \ref UC1601_SET_LC21
//! - Set System Reset               \ref UC1601_SET_SC
//! - Set LCD Bias Ratio             \ref UC1601_SET_BR
//! - Set COM End                    \ref UC1601_SET_CEN
//! - Set Partial Display Start      \ref UC1601_SET_DST
//! - Set Partial Display End        \ref UC1601_SET_DEN
//! - Read Data Byte from Memory     \ref UC1601_READ_DATA_CMD
//! - Get Status                     \ref UC1601_GET_STATUS_CMD
//!
//! \defgroup UC1601_Driver_Single  
//!  
//! \brief This is the UC1601 series Driver can be used in the condition which
//! the system only have one UC1601 series device.
//!
//! This driver is implemented by using defines and global variables.It can only 
//! use on one device because all the APIs use the some macros and global variables.
//!
//! <h1>Contents</h1>
//! - \ref UC1601_How_Define
//! - \ref UC1601_API_Group
//!   - \ref UC1601_API_Group_CMD
//!   - \ref UC1601_API_Group_AttriGet
//!   - \ref UC1601_API_Group_Special
//!   .
//! - \ref UC1601_Usage 
//! .
//!
//! \section UC1601_How_Define 1. How is the UC1601 Driver implemented?
//! Use define to config some Fixing things,such as SPI base and SPI pins
//! CS pin,use hold input or not,use write protect or not and which device
//! to use(This contains chip information).
//!
//! Use global variables to save variables use by the APIs.
//!
//! \section UC1601_API_Group 2. API Groups
//! 
//! The UC1601 API is broken into three groups of functions: 
//! - those that deal with UC1601 CMD , 
//! - those that deal with UC1601 init, 
//! - those that deal with UC1601 dispaly.
//! .
//!
//! \n
//! \subsection UC1601_API_Group_CMD 2.1 UC1601 CMD APIs
//! 
//! The UC1601 CMD is implemented by :
//! - UC1601DENSet() 
//! - UC1601DSTSet() 
//! - UC1601CENSet() 
//! - UC1601PMSet() 
//! - UC1601ScrollLineSet() 
//! - UC1601DisplayOff() 
//! - UC1601DisplayOn() 
//! - UC1601AllPixelOnDisable() 
//! - UC1601AllPixelOnEnable() 
//! - UC1601InverseDisable() 
//! - UC1601InverseEnable() 
//! - UC1601EScodeGet() 
//! .
//!
//! \n
//! \subsection UC1601_API_Group_AttriGet 2.2 UC1601 init APIs
//! 
//! The UC1601 init is set by :
//! - UC1601Init() 
//! - UC1601CmdWrite() 
//! - UC1601DoubleCmdWrite() 
//! - UC1601AddressSet() 
//! .
//!
//! \n
//! \subsection UC1601_API_Group_Special 2.3 UC1601 Dispaly functions APIs
//! 
//! The UC1601 dispaly by :
//! - UC1601DataWrite() 
//! - UC1601Dispaly() 
//! - UC1601InverseDispaly() 
//! - UC1601CharDispaly() 
//! - UC1601ChineseDispaly() 
//! - HD44780DisplayN() 
//! .
//!
//! \section UC1601_Usage 1. Usage & Program Examples
//! 
//! \code
//!//*****************************************************************************
//!//
//!//! \file Example.c
//!//! \brief the UC1601 Example.
//!//! \version 1.0
//!//! \date 10/15/2011
//!//! \author CooCox
//!//! \copy
//!//!
//!//! Copyright (c)  2011, CooCox 
//!//! All rights reserved.
//!//! 
//!//! Redistribution and use in source and binary forms, with or without 
//!//! modification, are permitted provided that the following conditions 
//!//! are met: 
//!//! 
//!//!     * Redistributions of source code must retain the above copyright 
//!//! notice, this list of conditions and the following disclaimer. 
//!//!     * Redistributions in binary form must reproduce the above copyright
//!//! notice, this list of conditions and the following disclaimer in the
//!//! documentation and/or other materials provided with the distribution. 
//!//!     * Neither the name of the <ORGANIZATION> nor the names of its 
//!//! contributors may be used to endorse or promote products derived 
//!//! from this software without specific prior written permission. 
//!//! 
//!//! THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
//!//! AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
//!//! IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
//!//! ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
//!//! LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
//!//! CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
//!//! SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
//!//! INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
//!//! CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
//!//! ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
//!//! THE POSSIBILITY OF SUCH DAMAGE.
//!//*****************************************************************************
//!#include "uc1601.h"
//!#include "xhw_ints.h"
//!#include "xhw_nvic.h"
//!#include "xhw_memmap.h"
//!#include "xhw_types.h"
//!#include "xdebug.h"
//!#include "xcore.h"
//!#include "xsysctl.h"
//!#include "xhw_sysctl.h"
//!#include "xhw_gpio.h"
//!#include "xgpio.h"
//!#include "xhw_uart.h"
//!#include "xuart.h"                                                                                
//!                                                                                 
//!                                                                                 
//!/*  ÐÂÄê¿ìÀÖ(16x16,Z)*/                                                          
//!char HZ[]={                                                                      
//!0x20,0x24,0x2C,0x35,0xE6,0x34,0x2C,0x24,0x00,0xFC,0x24,0x24,0xE2,0x22,0x22,0x00, 
//!0x21,0x11,0x4D,0x81,0x7F,0x05,0x59,0x21,0x18,0x07,0x00,0x00,0xFF,0x00,0x00,0x00, 
//!0x40,0x20,0x10,0x0C,0xE3,0x22,0x22,0x22,0xFE,0x22,0x22,0x22,0x22,0x02,0x00,0x00, 
//!0x04,0x04,0x04,0x04,0x07,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x04,0x04,0x00, 
//!0x70,0x00,0xFF,0x08,0xB0,0x88,0x88,0x88,0xFF,0x88,0x88,0x88,0xF8,0x80,0x80,0x00, 
//!0x00,0x00,0xFF,0x00,0x80,0x40,0x30,0x0E,0x01,0x06,0x08,0x30,0x60,0xC0,0x40,0x00, 
//!0x00,0x00,0x40,0xFC,0x44,0x44,0x44,0x46,0xFA,0x42,0x43,0x43,0x42,0x40,0x00,0x00, 
//!0x00,0x20,0x18,0x0C,0x07,0x12,0x20,0x40,0x3F,0x00,0x00,0x02,0x0C,0x38,0x10,0x00};
//!                                                                                 
//!//*****************************************************************************  
//!//                                                                               
//!//!  brief The example of the function of Dispaly.                               
//!//!                                                                              
//!//!  param None                                                                  
//!//!                                                                              
//!//!  details The example of the function of Dispaly.                             
//!//!  return None.                                                                
//!//                                                                               
//!//*****************************************************************************  
//!void UC1601DispalyExample(void)                                                  
//!{                                                                                
//!    //                                                                           
//!    // Set SysClk 50MHz using Extern 12M oscillator                              
//!    //                                                                           
//!    xSysCtlClockSet(50000000, xSYSCTL_OSC_MAIN | xSYSCTL_XTAL_12MHZ);            
//!    UC1601Init(1500000);                                                         
//!    UC1601Clear();                                                               
//!    UC1601CharDispaly(0, 0, "I love google?");                                   
//!    UC1601CharDispaly(1, 0, "Yes,I love!");                                      
//!    UC1601ChineseDispaly(3, 0, 4, (char *)&HZ);                                  
//!    HD44780DisplayN(2,0,5201314);                                                
//!    xSysCtlDelay(1000000);                                                       
//!    //UC1601Clear();                                                             
//!} 
//! \endcode
//!
//
//*****************************************************************************